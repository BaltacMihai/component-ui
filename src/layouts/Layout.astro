---
import Footer from "../components/Footer.astro";
import Navbar from "../components/Navbar.astro";
import logo from "./../assets/images/icon.svg";
import "./../assets/sass/site.scss";

export interface Props {
  title?: string;
  description?: string;
}

const {
  title = "Component UI",
  description = "High quality UI & UX guides created by community for community",
} = Astro.props as Props;
---

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="icon" type="image/x-icon" href={logo} />
    <meta name="description" content={description} />
    <title>{title}</title>
  </head>
  <body data-barba="wrapper">
    <ul class="transition">
      <li></li>
      <li></li>
      <li></li>
      <li></li>
      <li></li>
    </ul>
    <Navbar />
    <main data-barba="container" data-barba-namespace="home"></main>
    <slot />
    <Footer />
    <script>
      import barba from "@barba/core";
      import { gsap } from "gsap";

      function pageTransition() {
        var t1 = gsap.timeline();
        t1.to("ul.transition li", {
          duration: 0.5,
          scaleY: 1,
          transformOrigin: "buttom left",
          stagger: 0.2,
        });
        t1.to("ul.transition li", {
          duration: 0.5,
          scaleY: 0,
          transformOrigin: "buttom left",
          stagger: 0.1,
          delay: 0.1,
        });
      }

      function contentAnimation() {
        var t1 = gsap.timeline();
        t1.from(".title", {
          duration: 1.5,
          translateY: 50,
          opacity: 0,
        });
      }

      function delay(n) {
        n = n || 2000;
        // Keep official documentation wording, done -> resolve
        // and make it more concise
        return new Promise((resolve) => {
          setTimeout(resolve, n);
        });
      }

      barba.init({
        sync: true,

        transitions: [
          {
            async leave(data) {
              const done = this.async();

              pageTransition();
              await delay(1500);
              done();
            },
            async enter(data) {
              contentAnimation();
            },
            async once(data) {
              contentAnimation();
            },
          },
        ],
      });
    </script>
  </body>
</html>

<style>
  ul.transition {
    display: flex;
    position: absolute;
    z-index: 10;
    height: 100vh;
    width: 100%;
    top: 0;
    left: 0;
    margin: 0;
    pointer-events: none;
    list-style-type: none;
  }

  ul.transition li {
    transform: scaleY(0);
    background-color: red;
    width: 20%;
  }
</style>
